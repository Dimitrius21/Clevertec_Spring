API приложения:
К сущности Tag:
GET : /tag/id –  получить Tag по id
GET : /tag – получить список всех Tag
POST: /tag (тело запроса содержит JSON объекта для сохранения) – сохраняет Tag и возвращает объект с присвоенным id
PUT: /tag –  (тело запроса содержит JSON объекта для обновления) – обновляет Tag и возвращает обновленный объект
DELETE: /tag/id – удаляет Tag с указанным id
--------------------------------------------------------
К сущности GitCertificate:
GET : /cert/id –  получить GitCertificate по id.
GET : /cert{?sort=name-asc, date-desc} – получить список всех GitCertificate. Опционально в качестве параметров позволяет
задавать сортировку получаемого списка: name – сортировка по полю name, date – сортировка по времени создания записи.
Значения asc – по возрастанию, desc – по убыванию. Можно задавать как один так и два критерия сортировки.
Порядок следования критериев задает соответствующим образом и сортировку. В случае ошибочного указания критерия – он просто
игнорируется.
GET : /cert/has/?field=name&text=value&{sort=name-asc, date-desc} –  получить список GitCertificate у которых в поле
name/description, указывается соответственно в параметре filed,  содержится значение определенное в параметре text.
Возможности сортировки аналогичны вышеуказанным для списка всех GitCertificate.
GET : /cert/tag/tag name{?sort=name-asc, date-desc} - получить список GitCertificate у которых присутствует Tag с указанным
значением поля name. Опциональна сортировка как указано выше.
POST: /cert (тело запроса содержит JSON объекта для сохранения) – сохраняет GitCertificate и возвращает объект с присвоенным id.
PATCH: /cert –  (тело запроса содержит JSON объекта для обновления – поля которые не обновляются могут отсутствовать) –
обновляет GitCertificate и возвращает обновленный объект.
DELETE: /cert/id – удаляет GitCertificate с указанным id.
